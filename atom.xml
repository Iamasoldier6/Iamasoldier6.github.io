<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Iamasoldier6&#39;s World</title>
  <subtitle>Forged from suffering, hardened by pain.</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://iamasoldier6.com/"/>
  <updated>2016-05-06T01:46:09.000Z</updated>
  <id>http://iamasoldier6.com/</id>
  
  <author>
    <name>Iamasoldier6</name>
    <email>iamasoldiersix@gmail.com</email>
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Android Volley 研究综述（三）</title>
    <link href="http://iamasoldier6.com/2016/05/05/Android-Volley-%E7%A0%94%E7%A9%B6%E7%BB%BC%E8%BF%B0%EF%BC%88%E4%B8%89%EF%BC%89/"/>
    <id>http://iamasoldier6.com/2016/05/05/Android-Volley-研究综述（三）/</id>
    <published>2016-05-05T10:33:05.000Z</published>
    <updated>2016-05-06T01:46:09.000Z</updated>
    
    <content type="html">&lt;p&gt;众多请求在工具箱里随时准备使用实施；如果你的响应是字符串，图片，或者是 JSON ，你或许不需要实现自定义请求。&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;本篇在&lt;a href=&quot;http://iamasoldier6.com/2016/05/04/Android-Volley-研究综述（二）/&quot;&gt; Android Volley 研究综述（二）&lt;/a&gt;的基础上继续展开，分析关于 Volley 实现自定义的请求。&lt;/p&gt;
&lt;p&gt;对于你需要实现自定义请求的场合，这是所有你需要做的：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;继承 &lt;code&gt;Request&amp;lt;T&amp;gt;&lt;/code&gt; 类，&lt;code&gt;&amp;lt;T&amp;gt;&lt;/code&gt;代表请求预期所解析过响应的类型。因此，例如，假设你解析的响应是一个字符串，通过继承 &lt;code&gt;Request&amp;lt;String&amp;gt;&lt;/code&gt;来创建你的自定义请求。查看 Volley 工具类 StringRequest 和 ImageRequest ，来作为继承 &lt;code&gt;Request&amp;lt;T&amp;gt;&lt;/code&gt;的例子。&lt;/li&gt;
&lt;li&gt;实现抽象方法如 ParseNetworkResponse() 和 deliverResponse()。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;以上来自官网，众所周知，在网络上传输的数据通常有 JSON 和 XML 两种格式，下面利用 Volley 超强的扩展机制，先谈谈请求一条 XML 格式数据的做法。&lt;/p&gt;
&lt;h2 id=&quot;一-自定义-XMLRequest-的使用&quot;&gt;&lt;a href=&quot;#一-自定义-XMLRequest-的使用&quot; class=&quot;headerlink&quot; title=&quot;一. 自定义 XMLRequest 的使用&quot;&gt;&lt;/a&gt;&lt;strong&gt;一. 自定义 XMLRequest 的使用&lt;/strong&gt;&lt;/h2&gt;&lt;p&gt;XMLRequestDemo 地址: &lt;a href=&quot;https://github.com/Iamasoldier6/AndroidExerciseDemos&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt; GitHub &lt;/a&gt;。&lt;/p&gt;
&lt;p&gt;首先，看 StringRequest 的源码，研究其是怎么实现的，再模仿着写出 XMLRequest 。&lt;/p&gt;
&lt;figure class=&quot;highlight vbscript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;48&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;49&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;/**&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; * A canned &lt;span class=&quot;built_in&quot;&gt;request&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; retrieving the &lt;span class=&quot;built_in&quot;&gt;response&lt;/span&gt; body at a given URL as a &lt;span class=&quot;built_in&quot;&gt;string&lt;/span&gt;.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; */&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; StringRequest extends &lt;span class=&quot;built_in&quot;&gt;Request&lt;/span&gt;&amp;lt;&lt;span class=&quot;built_in&quot;&gt;String&lt;/span&gt;&amp;gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;private&lt;/span&gt; final &lt;span class=&quot;built_in&quot;&gt;Response&lt;/span&gt;.Listener&amp;lt;&lt;span class=&quot;built_in&quot;&gt;String&lt;/span&gt;&amp;gt; mListener;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    /**&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     * Creates a &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;request&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;with&lt;/span&gt; the given method&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     *&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     * @param method        the &lt;span class=&quot;built_in&quot;&gt;request&lt;/span&gt; &amp;#123;@link Method&amp;#125; &lt;span class=&quot;keyword&quot;&gt;to&lt;/span&gt; use&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     * @param url           URL &lt;span class=&quot;keyword&quot;&gt;to&lt;/span&gt; fetch the &lt;span class=&quot;built_in&quot;&gt;string&lt;/span&gt; at&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     * @param listener      Listener &lt;span class=&quot;keyword&quot;&gt;to&lt;/span&gt; receive the &lt;span class=&quot;built_in&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;response&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     * @param errorListener &lt;span class=&quot;keyword&quot;&gt;Error&lt;/span&gt; listener, &lt;span class=&quot;keyword&quot;&gt;or&lt;/span&gt; &lt;span class=&quot;literal&quot;&gt;null&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;to&lt;/span&gt; ignore errors&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     */&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; StringRequest(&lt;span class=&quot;built_in&quot;&gt;int&lt;/span&gt; method, &lt;span class=&quot;built_in&quot;&gt;String&lt;/span&gt; url, &lt;span class=&quot;built_in&quot;&gt;Response&lt;/span&gt;.Listener&amp;lt;&lt;span class=&quot;built_in&quot;&gt;String&lt;/span&gt;&amp;gt; listener,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                         &lt;span class=&quot;built_in&quot;&gt;Response&lt;/span&gt;.ErrorListener errorListener) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        super(method, url, errorListener);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        mListener = listener;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    /**&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     * Creates a &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;GET&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;request&lt;/span&gt;.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     *&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     * @param url           URL &lt;span class=&quot;keyword&quot;&gt;to&lt;/span&gt; fetch the &lt;span class=&quot;built_in&quot;&gt;string&lt;/span&gt; at&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     * @param listener      Listener &lt;span class=&quot;keyword&quot;&gt;to&lt;/span&gt; receive the &lt;span class=&quot;built_in&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;response&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     * @param errorListener &lt;span class=&quot;keyword&quot;&gt;Error&lt;/span&gt; listener, &lt;span class=&quot;keyword&quot;&gt;or&lt;/span&gt; &lt;span class=&quot;literal&quot;&gt;null&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;to&lt;/span&gt; ignore errors&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     */&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; StringRequest(&lt;span class=&quot;built_in&quot;&gt;String&lt;/span&gt; url, &lt;span class=&quot;built_in&quot;&gt;Response&lt;/span&gt;.Listener&amp;lt;&lt;span class=&quot;built_in&quot;&gt;String&lt;/span&gt;&amp;gt; listener,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                         &lt;span class=&quot;built_in&quot;&gt;Response&lt;/span&gt;.ErrorListener errorListener) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        this(Method.&lt;span class=&quot;keyword&quot;&gt;GET&lt;/span&gt;, url, listener, errorListener);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    @Override&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    protected &lt;span class=&quot;built_in&quot;&gt;Response&lt;/span&gt;&amp;lt;&lt;span class=&quot;built_in&quot;&gt;String&lt;/span&gt;&amp;gt; parseNetworkResponse(NetworkResponse &lt;span class=&quot;built_in&quot;&gt;response&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;built_in&quot;&gt;String&lt;/span&gt; parsed;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        try &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            parsed = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;String&lt;/span&gt;(&lt;span class=&quot;built_in&quot;&gt;response&lt;/span&gt;.data, HttpHeaderParser.parseCharset(&lt;span class=&quot;built_in&quot;&gt;response&lt;/span&gt;.headers));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125; catch (UnsupportedEncodingException e) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            parsed = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;String&lt;/span&gt;(&lt;span class=&quot;built_in&quot;&gt;response&lt;/span&gt;.data);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        return &lt;span class=&quot;built_in&quot;&gt;Response&lt;/span&gt;.success(parsed, HttpHeaderParser.parseCacheHeaders(&lt;span class=&quot;built_in&quot;&gt;response&lt;/span&gt;));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     @Override&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    protected void deliverResponse(&lt;span class=&quot;built_in&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;response&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        mListener.onResponse(&lt;span class=&quot;built_in&quot;&gt;response&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;不得不说，看 Google 工程师们的代码真得是种享受。简单分析该源码如下：&lt;/p&gt;
&lt;p&gt;首先，StringRequest 继承自 Request 类，Request 指定泛型类为 String 。&lt;/p&gt;
&lt;p&gt;其次，StringRequest 提供了两个有参的构造方法，参数包括请求类型、请求地址和响应回调等。需要注意的是，在构造方法中要调用 super() 方法将这几个参数传给父类，HTTP 的请求和响应都是在父类中自动处理的。&lt;/p&gt;
&lt;p&gt;最后，StringRequest 需要实现 Request 类中 deliverResponse() 和 parseNetworkResponse() 这两个抽象方法。deliverResponse() 中，调用了 mListener 的 onResponse() 方法，然后将 response 传入，即回调了服务器响应的数据；parseNetworkResponse() 中对服务器响应的数据进行解析，其中数据是以字节的形式存放在 NetworkResponse 的 data 变量中，这里将数据取出，再组装成一个 String ，最后传到 Response 的 success() 方法中。&lt;/p&gt;
&lt;p&gt;需要注意的是，parseNetworkResponse() 将 NetworkResponse 作为它的参数，其以 byte[] , HTTP 状态码以及头响应的形式包含响应负载。你的实现必须返回一个 &lt;code&gt;Response&amp;lt;T&amp;gt;&lt;/code&gt; ,它包含了指定类型的响应对象和缓存元数据或者一个错误，比如在解析失败的情况下。&lt;/p&gt;
&lt;p&gt;学习了 StringRequest 的原理，实现 XMLRequest 如下，新建一个 XMLRequest 类：&lt;/p&gt;
&lt;figure class=&quot;highlight vbscript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;36&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; XMLRequest extends &lt;span class=&quot;built_in&quot;&gt;Request&lt;/span&gt;&amp;lt;XmlPullParser&amp;gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;private&lt;/span&gt; final &lt;span class=&quot;built_in&quot;&gt;Response&lt;/span&gt;.Listener&amp;lt;XmlPullParser&amp;gt; mListener;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; XMLRequest(&lt;span class=&quot;built_in&quot;&gt;int&lt;/span&gt; method, &lt;span class=&quot;built_in&quot;&gt;String&lt;/span&gt; url, &lt;span class=&quot;built_in&quot;&gt;Response&lt;/span&gt;.Listener&amp;lt;XmlPullParser&amp;gt; listener,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                      &lt;span class=&quot;built_in&quot;&gt;Response&lt;/span&gt;.ErrorListener errorListener) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        super(method, url, errorListener);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        mListener = listener;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; XMLRequest(&lt;span class=&quot;built_in&quot;&gt;String&lt;/span&gt; url, &lt;span class=&quot;built_in&quot;&gt;Response&lt;/span&gt;.Listener&amp;lt;XmlPullParser&amp;gt; listener,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                      &lt;span class=&quot;built_in&quot;&gt;Response&lt;/span&gt;.ErrorListener errorListener) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        this(Method.&lt;span class=&quot;keyword&quot;&gt;GET&lt;/span&gt;, url, listener, errorListener);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    @Override&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    protected void deliverResponse(XmlPullParser &lt;span class=&quot;built_in&quot;&gt;response&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        mListener.onResponse(&lt;span class=&quot;built_in&quot;&gt;response&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    @Override&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    protected &lt;span class=&quot;built_in&quot;&gt;Response&lt;/span&gt;&amp;lt;XmlPullParser&amp;gt; parseNetworkResponse(NetworkResponse &lt;span class=&quot;built_in&quot;&gt;response&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        try &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;built_in&quot;&gt;String&lt;/span&gt; xmlString = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;String&lt;/span&gt;(&lt;span class=&quot;built_in&quot;&gt;response&lt;/span&gt;.data,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    HttpHeaderParser.parseCharset(&lt;span class=&quot;built_in&quot;&gt;response&lt;/span&gt;.headers));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            XmlPullParserFactory factory = XmlPullParserFactory.newInstance();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            XmlPullParser xmlPullParser = factory.newPullParser();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            xmlPullParser.setInput(&lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; StringReader(xmlString));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            return &lt;span class=&quot;built_in&quot;&gt;Response&lt;/span&gt;.success(xmlPullParser, HttpHeaderParser.parseCacheHeaders(&lt;span class=&quot;built_in&quot;&gt;response&lt;/span&gt;));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125; catch (UnsupportedEncodingException e) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            return &lt;span class=&quot;built_in&quot;&gt;Response&lt;/span&gt;.&lt;span class=&quot;keyword&quot;&gt;error&lt;/span&gt;(&lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; ParseError(e));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125; catch (XmlPullParserException e) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            return &lt;span class=&quot;built_in&quot;&gt;Response&lt;/span&gt;.&lt;span class=&quot;keyword&quot;&gt;error&lt;/span&gt;(&lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; ParseError(e));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;以上，基本是仿照 StringRequest 写下来的，XMLRequest 也是继承自 Request 类，这里指定的泛型类是 XmlPullParser ，即使用 Pull 解析的方式来解析 XML 。XmlPullParserFactory 是一个工厂，用于构建XmlPullParser 对象。在 parseNetworkResponse() 方法中，先是将服务器响应的数据解析成一个字符串，然后设置到 XmlPullParser 对象中，最后在 deliverResponse() 方法中回调 XmlPullParser 对象。&lt;/p&gt;
&lt;p&gt;下面使用自定义的 XMLRequest 来请求一段 XML 格式的数据，该&lt;a href=&quot;http://flash.weather.com.cn/wmaps/xml/china.xml&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;天气接口&lt;/a&gt;将中国所有省份及自治区的当天天气数据以 XML 格式返回。确定访问接口，使用 XMLRequest 如下，同样是在 MainActivity 的 onCreate() 方法里，思路大体和之前两篇文章一样，不分条说，直接放上整块代码：&lt;/p&gt;
&lt;figure class=&quot;highlight aspectj&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;36&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;RequestQueue queue = Volley.newRequestQueue(&lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;String url = &lt;span class=&quot;string&quot;&gt;&quot;http://flash.weather.com.cn/wmaps/xml/china.xml&quot;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;XMLRequest xmlRequest = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; XMLRequest(url,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; Response.Listener&amp;lt;XmlPullParser&amp;gt;() &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;meta&quot;&gt;@Override&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;onResponse&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(XmlPullParser response)&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;keyword&quot;&gt;try&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; eventType = response.getEventType();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    &lt;span class=&quot;keyword&quot;&gt;while&lt;/span&gt; (eventType != XmlPullParser.END_DOCUMENT) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                        &lt;span class=&quot;keyword&quot;&gt;switch&lt;/span&gt; (eventType) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                            &lt;span class=&quot;keyword&quot;&gt;case&lt;/span&gt; XmlPullParser.START_TAG:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                                String nodeName = response.getName();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                                &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (&lt;span class=&quot;string&quot;&gt;&quot;city&quot;&lt;/span&gt;.equals(nodeName)) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                                    String proName = response.getAttributeValue(&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                                    Log.d(&lt;span class=&quot;string&quot;&gt;&quot;TAG&quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&quot;proName is &quot;&lt;/span&gt; + proName);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                                &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                                &lt;span class=&quot;keyword&quot;&gt;break&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                        eventType = response.next();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &amp;#125; &lt;span class=&quot;keyword&quot;&gt;catch&lt;/span&gt; (XmlPullParserException e) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    e.printStackTrace();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &amp;#125; &lt;span class=&quot;keyword&quot;&gt;catch&lt;/span&gt; (IOException e) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    e.printStackTrace();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;             &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;, &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; Response.ErrorListener() &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;meta&quot;&gt;@Override&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;onErrorResponse&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(VolleyError &lt;span class=&quot;keyword&quot;&gt;error&lt;/span&gt;)&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        Log.e(&lt;span class=&quot;string&quot;&gt;&quot;TAG&quot;&lt;/span&gt;, &lt;span class=&quot;keyword&quot;&gt;error&lt;/span&gt;.getMessage(), &lt;span class=&quot;keyword&quot;&gt;error&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;try{} 语句块里是事件类型的处理。简单分析以上代码，先创建一个 XMLRequest 的实例，传入服务器接口地址，然后在 onResponse() 方法中解析响应的 XML 数据，选择性地只将每个省份及自治区的名字打印出来，最后将 XMLRequest 对象添加到 RequestQueue 当中。运行程序，查看 Logcat ，部分如下：&lt;/p&gt;
&lt;figure class=&quot;highlight stylus&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;number&quot;&gt;05&lt;/span&gt;-&lt;span class=&quot;number&quot;&gt;05&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;11&lt;/span&gt;:&lt;span class=&quot;number&quot;&gt;55&lt;/span&gt;:&lt;span class=&quot;number&quot;&gt;20.233&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;20037&lt;/span&gt;-&lt;span class=&quot;number&quot;&gt;20037&lt;/span&gt;/com&lt;span class=&quot;selector-class&quot;&gt;.iamasoldier6&lt;/span&gt;&lt;span class=&quot;selector-class&quot;&gt;.xmlrequestdemo&lt;/span&gt; D/TAG: proName is 北京&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;number&quot;&gt;05&lt;/span&gt;-&lt;span class=&quot;number&quot;&gt;05&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;11&lt;/span&gt;:&lt;span class=&quot;number&quot;&gt;55&lt;/span&gt;:&lt;span class=&quot;number&quot;&gt;20.233&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;20037&lt;/span&gt;-&lt;span class=&quot;number&quot;&gt;20037&lt;/span&gt;/com&lt;span class=&quot;selector-class&quot;&gt;.iamasoldier6&lt;/span&gt;&lt;span class=&quot;selector-class&quot;&gt;.xmlrequestdemo&lt;/span&gt; D/TAG: proName is 天津&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;number&quot;&gt;05&lt;/span&gt;-&lt;span class=&quot;number&quot;&gt;05&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;11&lt;/span&gt;:&lt;span class=&quot;number&quot;&gt;55&lt;/span&gt;:&lt;span class=&quot;number&quot;&gt;20.233&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;20037&lt;/span&gt;-&lt;span class=&quot;number&quot;&gt;20037&lt;/span&gt;/com&lt;span class=&quot;selector-class&quot;&gt;.iamasoldier6&lt;/span&gt;&lt;span class=&quot;selector-class&quot;&gt;.xmlrequestdemo&lt;/span&gt; D/TAG: proName is 上海&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;number&quot;&gt;05&lt;/span&gt;-&lt;span class=&quot;number&quot;&gt;05&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;11&lt;/span&gt;:&lt;span class=&quot;number&quot;&gt;55&lt;/span&gt;:&lt;span class=&quot;number&quot;&gt;20.233&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;20037&lt;/span&gt;-&lt;span class=&quot;number&quot;&gt;20037&lt;/span&gt;/com&lt;span class=&quot;selector-class&quot;&gt;.iamasoldier6&lt;/span&gt;&lt;span class=&quot;selector-class&quot;&gt;.xmlrequestdemo&lt;/span&gt; D/TAG: proName is 重庆&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;number&quot;&gt;05&lt;/span&gt;-&lt;span class=&quot;number&quot;&gt;05&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;11&lt;/span&gt;:&lt;span class=&quot;number&quot;&gt;55&lt;/span&gt;:&lt;span class=&quot;number&quot;&gt;20.233&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;20037&lt;/span&gt;-&lt;span class=&quot;number&quot;&gt;20037&lt;/span&gt;/com&lt;span class=&quot;selector-class&quot;&gt;.iamasoldier6&lt;/span&gt;&lt;span class=&quot;selector-class&quot;&gt;.xmlrequestdemo&lt;/span&gt; D/TAG: proName is 香港&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;number&quot;&gt;05&lt;/span&gt;-&lt;span class=&quot;number&quot;&gt;05&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;11&lt;/span&gt;:&lt;span class=&quot;number&quot;&gt;55&lt;/span&gt;:&lt;span class=&quot;number&quot;&gt;20.233&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;20037&lt;/span&gt;-&lt;span class=&quot;number&quot;&gt;20037&lt;/span&gt;/com&lt;span class=&quot;selector-class&quot;&gt;.iamasoldier6&lt;/span&gt;&lt;span class=&quot;selector-class&quot;&gt;.xmlrequestdemo&lt;/span&gt; D/TAG: proName is 澳门&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;number&quot;&gt;05&lt;/span&gt;-&lt;span class=&quot;number&quot;&gt;05&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;11&lt;/span&gt;:&lt;span class=&quot;number&quot;&gt;55&lt;/span&gt;:&lt;span class=&quot;number&quot;&gt;20.233&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;20037&lt;/span&gt;-&lt;span class=&quot;number&quot;&gt;20037&lt;/span&gt;/com&lt;span class=&quot;selector-class&quot;&gt;.iamasoldier6&lt;/span&gt;&lt;span class=&quot;selector-class&quot;&gt;.xmlrequestdemo&lt;/span&gt; D/TAG: proName is 台湾&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&quot;二-自定义-GsonRequest的使用&quot;&gt;&lt;a href=&quot;#二-自定义-GsonRequest的使用&quot; class=&quot;headerlink&quot; title=&quot;二. 自定义 GsonRequest的使用&quot;&gt;&lt;/a&gt;&lt;strong&gt;二. 自定义 GsonRequest的使用&lt;/strong&gt;&lt;/h2&gt;&lt;p&gt;GsonRequestDemo 地址: &lt;a href=&quot;https://github.com/Iamasoldier6/AndroidExerciseDemos&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt; GitHub &lt;/a&gt;。&lt;/p&gt;
&lt;p&gt;Gson 是一个使用映射以支持 Java 对象与 Json 之间相互转换的库文件。你可以定义和它们相应的 Json 键值同名的 Java   对象，传递类对象给 Gson ，然后 Gson 将帮你去填充相应区域。&lt;/p&gt;
&lt;p&gt;以上来自官网，总结来说，Gson 可以更简单地解析 Json 。但是，Volley 中并不支持 Gson 来解析数据，下面来自定义一个 GsonRequest 。&lt;/p&gt;
&lt;p&gt;首先，下载 Gson，地址：&lt;a href=&quot;https://github.com/google/gson&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;google / gson&lt;/a&gt;，然后将 gson 的 jar 包添加到项目中。其他一些准备工作也自不必多说。&lt;/p&gt;
&lt;p&gt;其次，新建一个 GsonRequest 类如下：&lt;/p&gt;
&lt;figure class=&quot;highlight scala&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;public &lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;GsonRequest&amp;lt;T&amp;gt;&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;extends&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;Request&amp;lt;T&amp;gt;&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;type&quot;&gt;Gson&lt;/span&gt; gson = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;type&quot;&gt;Gson&lt;/span&gt;();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;type&quot;&gt;Class&lt;/span&gt;&amp;lt;&lt;span class=&quot;type&quot;&gt;T&lt;/span&gt;&amp;gt; clazz;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;type&quot;&gt;Response&lt;/span&gt;.&lt;span class=&quot;type&quot;&gt;Listener&lt;/span&gt;&amp;lt;&lt;span class=&quot;type&quot;&gt;T&lt;/span&gt;&amp;gt; listener;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    public &lt;span class=&quot;type&quot;&gt;GsonRequest&lt;/span&gt;(&lt;span class=&quot;type&quot;&gt;String&lt;/span&gt; url, &lt;span class=&quot;type&quot;&gt;Class&lt;/span&gt;&amp;lt;&lt;span class=&quot;type&quot;&gt;T&lt;/span&gt;&amp;gt; clazz,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                       &lt;span class=&quot;type&quot;&gt;Response&lt;/span&gt;.&lt;span class=&quot;type&quot;&gt;Listener&lt;/span&gt;&amp;lt;&lt;span class=&quot;type&quot;&gt;T&lt;/span&gt;&amp;gt; listener, &lt;span class=&quot;type&quot;&gt;Response&lt;/span&gt;.&lt;span class=&quot;type&quot;&gt;ErrorListener&lt;/span&gt; errorListener) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;super&lt;/span&gt;(&lt;span class=&quot;type&quot;&gt;Method&lt;/span&gt;.&lt;span class=&quot;type&quot;&gt;GET&lt;/span&gt;, url, errorListener);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.clazz = clazz;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.listener = listener;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;meta&quot;&gt;@Override&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;protected&lt;/span&gt; void deliverResponse(&lt;span class=&quot;type&quot;&gt;T&lt;/span&gt; response) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        listener.onResponse(response);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;meta&quot;&gt;@Override&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;protected&lt;/span&gt; &lt;span class=&quot;type&quot;&gt;Response&lt;/span&gt;&amp;lt;&lt;span class=&quot;type&quot;&gt;T&lt;/span&gt;&amp;gt; parseNetworkResponse(&lt;span class=&quot;type&quot;&gt;NetworkResponse&lt;/span&gt; response) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;try&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;type&quot;&gt;String&lt;/span&gt; json = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;type&quot;&gt;String&lt;/span&gt;(response.data,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    &lt;span class=&quot;type&quot;&gt;HttpHeaderParser&lt;/span&gt;.parseCharset(response.headers));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;type&quot;&gt;Response&lt;/span&gt;.success(gson.fromJson(json, clazz),&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    &lt;span class=&quot;type&quot;&gt;HttpHeaderParser&lt;/span&gt;.parseCacheHeaders(response));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125; &lt;span class=&quot;keyword&quot;&gt;catch&lt;/span&gt; (&lt;span class=&quot;type&quot;&gt;UnsupportedEncodingException&lt;/span&gt; e) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;type&quot;&gt;Response&lt;/span&gt;.error(&lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;type&quot;&gt;ParseError&lt;/span&gt;(e));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125; &lt;span class=&quot;keyword&quot;&gt;catch&lt;/span&gt; (&lt;span class=&quot;type&quot;&gt;JsonSyntaxException&lt;/span&gt; e) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;type&quot;&gt;Response&lt;/span&gt;.error(&lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;type&quot;&gt;ParseError&lt;/span&gt;(e));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;GsonRequest 继承自 Request 类，类似地，parseNetworkResponse() 方法中，先是将服务器响应的数据解析出来，再通过调用 Gson 的 fromJson() 方法将数据组装成对象。deliverResponse() 方法中，回调最终的数据。打算调用&lt;a href=&quot;http://www.weather.com.cn/data/sk/101010100.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;天气数据&lt;/a&gt;，由于中国天气网的接口原因，返回的城市名有点乱码，不过总归是 JSON 格式的。&lt;/p&gt;
&lt;p&gt;然后，使用对象的方式将 JSON 字符串表示出来。新建一个 Weather 类，如下：&lt;/p&gt;
&lt;figure class=&quot;highlight cs&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;Weather&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;private&lt;/span&gt; WeatherInfo weatherinfo;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; WeatherInfo &lt;span class=&quot;title&quot;&gt;getWeatherinfo&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; weatherinfo;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;setWeatherinfo&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;WeatherInfo weatherinfo&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.weatherinfo = weatherinfo;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;Weather 类引用 WeatherInfo 类，再新建 WeatherInfo 类，如下：&lt;/p&gt;
&lt;figure class=&quot;highlight arduino&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; WeatherInfo &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;String&lt;/span&gt; city;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;String&lt;/span&gt; temp;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;String&lt;/span&gt; time;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;String&lt;/span&gt; getCity() &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;built_in&quot;&gt;return&lt;/span&gt; city;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; setCity(&lt;span class=&quot;keyword&quot;&gt;String&lt;/span&gt; city) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.city = city;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;String&lt;/span&gt; getTemp() &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;built_in&quot;&gt;return&lt;/span&gt; temp;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; setTemp(&lt;span class=&quot;keyword&quot;&gt;String&lt;/span&gt; temp) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.temp = temp;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;String&lt;/span&gt; getTime() &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;built_in&quot;&gt;return&lt;/span&gt; time;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; setTime(&lt;span class=&quot;keyword&quot;&gt;String&lt;/span&gt; time) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.time = time;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;WeatherInfo 类中含有 city, temp, time 字段。当然，调用方法仍然与前述的类似，如下：&lt;/p&gt;
&lt;figure class=&quot;highlight vbscript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;RequestQueue queue = Volley.newRequestQueue(this);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;String&lt;/span&gt; url = &lt;span class=&quot;string&quot;&gt;&quot;http://www.weather.com.cn/data/sk/101010100.html&quot;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;GsonRequest&amp;lt;Weather&amp;gt; gsonRequest = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; GsonRequest&amp;lt;Weather&amp;gt;(url, Weather.&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;Response&lt;/span&gt;.Listener&amp;lt;Weather&amp;gt;() &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;         @Override&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;         &lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; void onResponse(Weather weather) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;             WeatherInfo weatherInfo = weather.getWeatherinfo();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;             &lt;span class=&quot;built_in&quot;&gt;Log&lt;/span&gt;.d(&lt;span class=&quot;string&quot;&gt;&quot;TAG&quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&quot;city is &quot;&lt;/span&gt; + weatherInfo.getCity());&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;             &lt;span class=&quot;built_in&quot;&gt;Log&lt;/span&gt;.d(&lt;span class=&quot;string&quot;&gt;&quot;TAG&quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&quot;temp is &quot;&lt;/span&gt; + weatherInfo.getTemp());&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;             &lt;span class=&quot;built_in&quot;&gt;Log&lt;/span&gt;.d(&lt;span class=&quot;string&quot;&gt;&quot;TAG&quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&quot;time is &quot;&lt;/span&gt; + weatherInfo.getTime());&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;         &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     &amp;#125;, &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;Response&lt;/span&gt;.ErrorListener() &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    @Override&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; void onErrorResponse(VolleyError &lt;span class=&quot;keyword&quot;&gt;error&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;built_in&quot;&gt;Log&lt;/span&gt;.e(&lt;span class=&quot;string&quot;&gt;&quot;TAG&quot;&lt;/span&gt;, &lt;span class=&quot;keyword&quot;&gt;error&lt;/span&gt;.getMessage(), &lt;span class=&quot;keyword&quot;&gt;error&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;queue.add(gsonRequest);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;onResponse() 方法回调中返回了一个 Weather 对象，通过它可以得到 WeatherInfo 对象，接着选择性地取出所要的 JSON 数据。运行程序：&lt;/p&gt;
&lt;figure class=&quot;highlight stylus&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;number&quot;&gt;05&lt;/span&gt;-&lt;span class=&quot;number&quot;&gt;05&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;03&lt;/span&gt;:&lt;span class=&quot;number&quot;&gt;09&lt;/span&gt;:&lt;span class=&quot;number&quot;&gt;10.538&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;1632&lt;/span&gt;-&lt;span class=&quot;number&quot;&gt;1632&lt;/span&gt;/com&lt;span class=&quot;selector-class&quot;&gt;.iamasoldier6&lt;/span&gt;&lt;span class=&quot;selector-class&quot;&gt;.gsonrequestdemo&lt;/span&gt; D/TAG: city is 北京&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;number&quot;&gt;05&lt;/span&gt;-&lt;span class=&quot;number&quot;&gt;05&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;03&lt;/span&gt;:&lt;span class=&quot;number&quot;&gt;09&lt;/span&gt;:&lt;span class=&quot;number&quot;&gt;10.538&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;1632&lt;/span&gt;-&lt;span class=&quot;number&quot;&gt;1632&lt;/span&gt;/com&lt;span class=&quot;selector-class&quot;&gt;.iamasoldier6&lt;/span&gt;&lt;span class=&quot;selector-class&quot;&gt;.gsonrequestdemo&lt;/span&gt; D/TAG: temp is &lt;span class=&quot;number&quot;&gt;18&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;number&quot;&gt;05&lt;/span&gt;-&lt;span class=&quot;number&quot;&gt;05&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;03&lt;/span&gt;:&lt;span class=&quot;number&quot;&gt;09&lt;/span&gt;:&lt;span class=&quot;number&quot;&gt;10.538&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;1632&lt;/span&gt;-&lt;span class=&quot;number&quot;&gt;1632&lt;/span&gt;/com&lt;span class=&quot;selector-class&quot;&gt;.iamasoldier6&lt;/span&gt;&lt;span class=&quot;selector-class&quot;&gt;.gsonrequestdemo&lt;/span&gt; D/TAG: &lt;span class=&quot;selector-tag&quot;&gt;time&lt;/span&gt; is &lt;span class=&quot;number&quot;&gt;17&lt;/span&gt;:&lt;span class=&quot;number&quot;&gt;05&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;显示的北京在 Android Studio 上是乱码的，这里手动改正了下。&lt;/p&gt;
&lt;p&gt;本篇深刻地理解了自定义 Request 的的方法，至此，关于 Android Volley 研究综述（三）到此结束，（四）未完待续。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;本着知其然，知其所以然的理念，（四）会是关于 Volley 源码的研究综述，奈何笔者目前水平有限，待自觉有水平写出 Volley 源码研究综述时，再去完善所谓的（四）。最近有些高产，实则想将学习吸收的 Volley 部分尽快总结至博客上，接下来，仍然顺着去看 Android 官方 Training，同时，博客更新频率回归到正常节奏。&lt;/strong&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt;
&lt;h2 id=&quot;参考文献&quot;&gt;&lt;a href=&quot;#参考文献&quot; class=&quot;headerlink&quot; title=&quot;参考文献&quot;&gt;&lt;/a&gt;&lt;strong&gt;参考文献&lt;/strong&gt;&lt;/h2&gt;&lt;p&gt;1.&lt;a href=&quot;http://developer.android.com/training/volley/request-custom.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://developer.android.com/training/volley/request-custom.html&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;2.&lt;a href=&quot;http://blog.csdn.net/guolin_blog/article/details/17612763&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://blog.csdn.net/guolin_blog/article/details/17612763&lt;/a&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;众多请求在工具箱里随时准备使用实施；如果你的响应是字符串，图片，或者是 JSON ，你或许不需要实现自定义请求。
    
    </summary>
    
    
      <category term="Android" scheme="http://iamasoldier6.com/tags/Android/"/>
    
      <category term="Volley" scheme="http://iamasoldier6.com/tags/Volley/"/>
    
      <category term="Source Code" scheme="http://iamasoldier6.com/tags/Source-Code/"/>
    
  </entry>
  
  <entry>
    <title>Android Volley 研究综述（二）</title>
    <link href="http://iamasoldier6.com/2016/05/04/Android-Volley-%E7%A0%94%E7%A9%B6%E7%BB%BC%E8%BF%B0%EF%BC%88%E4%BA%8C%EF%BC%89/"/>
    <id>http://iamasoldier6.com/2016/05/04/Android-Volley-研究综述（二）/</id>
    <published>2016-05-04T15:02:15.000Z</published>
    <updated>2016-05-05T13:55:26.000Z</updated>
    
    <content type="html">&lt;p&gt;Universal-Image-Loader 具备强大的网络图片加载功能，使用 Volley ，可以实现类似的效果，并且，在性能上也毫不逊色。&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;本篇在&lt;a href=&quot;http://iamasoldier6.com/2016/04/30/Android-Volley-研究综述（一）/&quot;&gt; Android Volley 研究综述（一）&lt;/a&gt;的基础上继续展开，分析关于 Volley 加载网络图片。&lt;/p&gt;
&lt;h2 id=&quot;一-ImageRequest-的使用&quot;&gt;&lt;a href=&quot;#一-ImageRequest-的使用&quot; class=&quot;headerlink&quot; title=&quot;一. ImageRequest 的使用&quot;&gt;&lt;/a&gt;&lt;strong&gt;一. ImageRequest 的使用&lt;/strong&gt;&lt;/h2&gt;&lt;p&gt;ImageRequestDemo 地址: &lt;a href=&quot;https://github.com/Iamasoldier6/AndroidExerciseDemos&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt; GitHub &lt;/a&gt;。&lt;/p&gt;
&lt;p&gt;ImageRequest ，指定一个 URL ，并在响应回调中接收一张图片。具体来说，ImageRequest 是一个封装好的 request ，用来在给定的 URL 中获得一张图片，同时调回一张解码过的位图。它也提供了些便捷的特性，如指定一种大小来重新裁剪。其主要优点是，Volley 的线程调度确保昂贵的图片操作（解码，重新裁剪）自动地在工作线程中发生。&lt;/p&gt;
&lt;p&gt;以上来自官网，总结来说，同 StringRequest 和 JsonRequest 类似，使用大体分以下三步：&lt;/p&gt;
&lt;p&gt;I.创建一个 RequestQueue 对象。&lt;/p&gt;
&lt;p&gt;II.创建一个 Request 对象。&lt;/p&gt;
&lt;p&gt;III.将 Request 对象添加到 RequestQueue 里面。&lt;/p&gt;
&lt;p&gt;同样，首先，在 MainActivity 的 onCreate() 方法里，需要获取到一个 RequestQueue 对象：&lt;/p&gt;
&lt;figure class=&quot;highlight cpp&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;RequestQueue &lt;span class=&quot;built_in&quot;&gt;queue&lt;/span&gt; = Volley.newRequestQueue(&lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;接着，初始化：&lt;/p&gt;
&lt;figure class=&quot;highlight lisp&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;final ImageView mImageView&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;mImageView = (&lt;span class=&quot;name&quot;&gt;ImageView&lt;/span&gt;) findViewById(&lt;span class=&quot;name&quot;&gt;R&lt;/span&gt;.id.myImage)&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;同时，在 drawable 目录下放入一张 default_image 图片，删掉 activity_main.xml 中的 TextView ，即删掉：&lt;/p&gt;
&lt;figure class=&quot;highlight applescript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;TextView&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    android:layout_width=&lt;span class=&quot;string&quot;&gt;&quot;wrap_content&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    android:layout_height=&lt;span class=&quot;string&quot;&gt;&quot;wrap_content&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    android:&lt;span class=&quot;built_in&quot;&gt;text&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;Hello World!&quot;&lt;/span&gt;/&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;添加 ImageView：&lt;/p&gt;
&lt;figure class=&quot;highlight applescript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;ImageView&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    android:&lt;span class=&quot;built_in&quot;&gt;id&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;@+id/myImage&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    android:layout_width=&lt;span class=&quot;string&quot;&gt;&quot;200dp&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    android:layout_height=&lt;span class=&quot;string&quot;&gt;&quot;200dp&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    android:layout_marginLeft=&lt;span class=&quot;string&quot;&gt;&quot;65dp&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    android:layout_marginTop=&lt;span class=&quot;string&quot;&gt;&quot;150dp&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    android:layout_gravity=&lt;span class=&quot;string&quot;&gt;&quot;center&quot;&lt;/span&gt;/&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;然后，要 new 出一个 ImageRequest 对象：&lt;/p&gt;
&lt;figure class=&quot;highlight aspectj&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;String url = &lt;span class=&quot;string&quot;&gt;&quot;http://7xt0ac.com1.z0.glb.clouddn.com/AR.jpg&quot;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;ImageRequest imageRequest = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; ImageRequest(url,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; Response.Listener&amp;lt;Bitmap&amp;gt;() &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;           &lt;span class=&quot;meta&quot;&gt;@Override&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;           &lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;onResponse&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(Bitmap response)&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;              mImageView.setImageBitmap(response);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;           &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       &amp;#125;, &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;, Bitmap.Config.RGB_565, &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; Response.ErrorListener() &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;meta&quot;&gt;@Override&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;onErrorResponse&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(VolleyError &lt;span class=&quot;keyword&quot;&gt;error&lt;/span&gt;)&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       mImageView.setImageResource(R.drawable.default_image);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;ImageRequest() 方法接收六个参数，第一个是图片的 URL 地址；第二个是图片请求成功的回调，将返回的 Bitmap 参数设置到 ImageView 中；第三个和第四个分别用于指定图片的最大宽度和最大高度，若指定图片的宽度或高度大于最大值，则对图片进行压缩，指定为 0 ，则无论图片多大，都不会压缩；第五个用于指定图片的颜色属性；第六个是图片请求失败的回调，失败时在 ImageView 中显示一张默认的图片，即显示 default_image 。&lt;/p&gt;
&lt;p&gt;最后，将该 ImageRequest 对象添加到 RequestQueue 里面即可：&lt;/p&gt;
&lt;figure class=&quot;highlight cpp&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;queue&lt;/span&gt;.add(imageRequest);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;同样，不要忘了在 AndroidManifest.xml 文件中添加一条权限：&lt;/p&gt;
&lt;figure class=&quot;highlight applescript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;uses-permission android:&lt;span class=&quot;built_in&quot;&gt;name&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;android.permission.INTERNET&quot;&lt;/span&gt;/&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;运行程序，发送网络请求，正常成功的话，显示：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://7xt0ac.com1.z0.glb.clouddn.com/success1.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;如果因各种意外原因，请求失败的话，显示：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://7xt0ac.com1.z0.glb.clouddn.com/failure1.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;h2 id=&quot;二-ImageLoader-的使用&quot;&gt;&lt;a href=&quot;#二-ImageLoader-的使用&quot; class=&quot;headerlink&quot; title=&quot;二. ImageLoader 的使用&quot;&gt;&lt;/a&gt;&lt;strong&gt;二. ImageLoader 的使用&lt;/strong&gt;&lt;/h2&gt;&lt;p&gt;ImageLoaderDemo 地址: &lt;a href=&quot;https://github.com/Iamasoldier6/AndroidExerciseDemos&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt; GitHub &lt;/a&gt;。&lt;/p&gt;
&lt;p&gt;ImageLoader，一个处理加载与缓存从远程 URLs 获取图片的帮助类。它是一个大量 ImageRequest 的协调器，如将许多小图片放入 ListView 中。ImageLoader 提供了一个超前于标准 Volley 缓存的内存内缓存，这对于防止抖动是重要的。在未堵塞或延迟主线程的情况下，这让实现缓存击中成为可能，不过，当使用磁盘 I/O 时是不可能的。ImageLoader 也能实现响应合并，没有它的话，几乎每一个响应处理机会将 bitmap 放到 view 上，并且会造成每一张图片的布局传递。合并让同时传送多个响应成为可能，这提升了性能。&lt;/p&gt;
&lt;p&gt;以上来自官网，总结来说，ImageLoader 也可以用来加载网络上的图片，并且它的内部也是使用 ImageRequest 实现的。但是，ImageLoader 较 ImageRequest 更高效，它不仅可以对图片进行缓存，还可以过滤掉重复的链接，避免重复发送请求。&lt;br&gt;ImageLoader 不是继承自 Request ，用法也与之前有所不同，大致分四步：&lt;/p&gt;
&lt;p&gt;I.创建一个 RequestQueue 对象。&lt;/p&gt;
&lt;p&gt;II.创建一个 ImageLoader 对象。&lt;/p&gt;
&lt;p&gt;III.获取一个 ImageListener 对象。&lt;/p&gt;
&lt;p&gt;IV.调用 ImageLoader 的 get() 方法加载网络上的图片。&lt;/p&gt;
&lt;p&gt;具体如下：&lt;/p&gt;
&lt;p&gt;第一步与初始化部分同上述 ImageRequest 的一样。&lt;/p&gt;
&lt;p&gt;接着，new 一个 ImageLoader 对象：&lt;/p&gt;
&lt;figure class=&quot;highlight aspectj&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;String url = &lt;span class=&quot;string&quot;&gt;&quot;http://7xt0ac.com1.z0.glb.clouddn.com/AR.jpg&quot;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;ImageLoader imageLoader = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; ImageLoader(queue, &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; ImageLoader.ImageCache() &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;meta&quot;&gt;@Override&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;putBitmap&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(String url, Bitmap bitmap)&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;meta&quot;&gt;@Override&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;function&quot;&gt;Bitmap &lt;span class=&quot;title&quot;&gt;getBitmap&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(String url)&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;null&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;ImageLoader() 方法接收两个参数，第一个是 RequestQueue 对象，第二个是 ImageCache 对象，暂且先 new 出一个空的 ImageCache 实现。&lt;/p&gt;
&lt;p&gt;然后，获取一个 ImageListener 对象，在此之前的基础上，再放一张 failed_image 图片至 drawable 目录下：&lt;/p&gt;
&lt;figure class=&quot;highlight cos&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;ImageLoader.ImageListener listener = ImageLoader.getImageListener(mImageView,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;R&lt;/span&gt;.drawable.default_image, &lt;span class=&quot;keyword&quot;&gt;R&lt;/span&gt;.drawable.failed_image)&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;调用 ImageLoader 的 getImageListener() 方法获取到一个 ImageListener 对象，getImageListener() 方法接收三个参数，第一个指定显示图片的 ImageView 控件，第二个指定加载图片过程中默认显示的图片，第三个指定加载图片失败时显示的图片。&lt;/p&gt;
&lt;p&gt;最后，调用 ImageLoader 的 get() 方法加载图片：&lt;/p&gt;
&lt;figure class=&quot;highlight applescript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;imageLoader.&lt;span class=&quot;keyword&quot;&gt;get&lt;/span&gt;(url, listener);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;get() 方法接收两个参数，第一个是图片的 URL ， 第二个是获取到的 ImageListener 对象。另外，要对图片的大小进行限制，使用 get() 方法的重载，指定图片允许的最大宽度和最大高度，如下：&lt;/p&gt;
&lt;figure class=&quot;highlight applescript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;imageLoader.&lt;span class=&quot;keyword&quot;&gt;get&lt;/span&gt;(url, listener, &lt;span class=&quot;number&quot;&gt;200&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;200&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;同样，不要忘了在 AndroidManifest.xml 文件中添加同上面一样的权限。&lt;/p&gt;
&lt;p&gt;运行程序，先会显示默认的图片，最后效果图如下：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://7xt0ac.com1.z0.glb.clouddn.com/imageloader1.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;ImageLoaderCacheDemo 地址: &lt;a href=&quot;https://github.com/Iamasoldier6/AndroidExerciseDemos&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt; GitHub &lt;/a&gt;。&lt;/p&gt;
&lt;p&gt;学会了 ImageLoader 的使用，但是其优点却没有用到。上述代码中，创建的 ImageCache 对象是一个空实现，没能起到图片缓存的作用。这里，借助 Android 提供的 LruCache 功能，写一个性能很好的 ImageCache ，新建一个 BitmapCache 并实现 ImageCache 接口：&lt;/p&gt;
&lt;figure class=&quot;highlight aspectj&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;BitmapCache&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;implements&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;ImageLoader&lt;/span&gt;.&lt;span class=&quot;title&quot;&gt;ImageCache&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;private&lt;/span&gt; LruCache&amp;lt;String, Bitmap&amp;gt; mCache;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;BitmapCache&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; maxSize = &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt; * &lt;span class=&quot;number&quot;&gt;1024&lt;/span&gt; * &lt;span class=&quot;number&quot;&gt;1024&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        mCache = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; LruCache&amp;lt;String, Bitmap&amp;gt;(maxSize) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;meta&quot;&gt;@Override&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;protected&lt;/span&gt; &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;sizeOf&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(String key, Bitmap bitmap)&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; bitmap.getRowBytes() * bitmap.getHeight();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;meta&quot;&gt;@Override&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;function&quot;&gt;Bitmap &lt;span class=&quot;title&quot;&gt;getBitmap&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(String url)&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; mCache.&lt;span class=&quot;title&quot;&gt;get&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(url)&lt;/span&gt;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;meta&quot;&gt;@Override&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;putBitmap&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(String url, Bitmap bitmap)&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        mCache.put(url, bitmap);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;将缓存图片的大小设置为 1M ，修改创建 ImageLoader 实例的代码，第二个参数传入 BitmapCache 的实例：&lt;/p&gt;
&lt;figure class=&quot;highlight cpp&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;ImageLoader imageLoader = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; ImageLoader(&lt;span class=&quot;built_in&quot;&gt;queue&lt;/span&gt;, &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; BitmapCache());&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;然后其他所有，与前面的设置及代码一样，运行，Logcat 报出 unknown buffer 。在 Stack Overflow 上找到解决办法，即于 AndroidManifest.xml 文件中添加最后一行代码，具体如图：&lt;/p&gt;
&lt;figure class=&quot;highlight perl&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;application&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    android:allowBackup=&lt;span class=&quot;string&quot;&gt;&quot;true&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    android:icon=&lt;span class=&quot;string&quot;&gt;&quot;@mipmap/ic_launcher&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    android:label=&lt;span class=&quot;string&quot;&gt;&quot;@string/app_name&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    android:supportsRtl=&lt;span class=&quot;string&quot;&gt;&quot;true&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    android:theme=&lt;span class=&quot;string&quot;&gt;&quot;@style/AppTheme&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    android:largeHeap=&lt;span class=&quot;string&quot;&gt;&quot;true&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;使用 largeHeap ，请求系统为 Dalvik 虚拟机分配更大的内存空间，解决内存过小不够用导致的 OutOfMemoryError 的问题。最后，再运行，显示与上面的图片显示一样。&lt;/p&gt;
&lt;h2 id=&quot;三-NetworkImageView-的使用&quot;&gt;&lt;a href=&quot;#三-NetworkImageView-的使用&quot; class=&quot;headerlink&quot; title=&quot;三. NetworkImageView 的使用&quot;&gt;&lt;/a&gt;&lt;strong&gt;三. NetworkImageView 的使用&lt;/strong&gt;&lt;/h2&gt;&lt;p&gt;NetworkImageViewDemo 地址: &lt;a href=&quot;https://github.com/Iamasoldier6/AndroidExerciseDemos&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt; GitHub &lt;/a&gt;。&lt;/p&gt;
&lt;p&gt;NetworkImageView，建立在 ImageLoader 上，并且在你的图片通过网络 URL 取回的情况下，有效地替代 ImageView 。如果 view 从层级结构中分离，NetworkImageView 也能管理取消待处理的请求。&lt;/p&gt;
&lt;p&gt;以上来自官网，总结来说，NetworkImageView 是一个自定义控制，继承自 ImageView ，具备 ImageView 的所有功能，并在原始的基础上拥有加载网络图片的功能。大致分以下五步：&lt;/p&gt;
&lt;p&gt;I.创建一个 RequestQueue 对象。&lt;/p&gt;
&lt;p&gt;II.创建一个 ImageLoader 对象。&lt;/p&gt;
&lt;p&gt;III.布局文件中添加一个 NetworkImageView 的控件。&lt;/p&gt;
&lt;p&gt;IV.代码中获取该控件的实例。&lt;/p&gt;
&lt;p&gt;V.设置要加载的图片地址。&lt;/p&gt;
&lt;p&gt;第一步与初始化部分仍然同 ImageRequest 的大致一样。不过，添加 ImageView 部分 改为 添加 NetworkImageView 部分如下：&lt;/p&gt;
&lt;figure class=&quot;highlight stylus&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;com&lt;span class=&quot;selector-class&quot;&gt;.android&lt;/span&gt;&lt;span class=&quot;selector-class&quot;&gt;.volley&lt;/span&gt;&lt;span class=&quot;selector-class&quot;&gt;.toolbox&lt;/span&gt;&lt;span class=&quot;selector-class&quot;&gt;.NetworkImageView&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    android:id=&lt;span class=&quot;string&quot;&gt;&quot;@+id/networkImageView&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    android:layout_width=&lt;span class=&quot;string&quot;&gt;&quot;200dp&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    android:layout_height=&lt;span class=&quot;string&quot;&gt;&quot;200dp&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    android:layout_marginLeft=&lt;span class=&quot;string&quot;&gt;&quot;65dp&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    android:layout_marginTop=&lt;span class=&quot;string&quot;&gt;&quot;150dp&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    android:layout_gravity=&lt;span class=&quot;string&quot;&gt;&quot;center&quot;&lt;/span&gt;/&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;然后，得到了 NetworkImageView 控件的实例后，调用 setDefaultImageResId() 方法、setErrorImageResId() 方法和 setImageUrl() 方法来分别设置加载成功显示的图片，加载失败时显示的图片和目标图片的 URL 地址。如下：&lt;/p&gt;
&lt;figure class=&quot;highlight css&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;selector-tag&quot;&gt;mNetworkImageView&lt;/span&gt;&lt;span class=&quot;selector-class&quot;&gt;.setDefaultImageResId&lt;/span&gt;(&lt;span class=&quot;selector-tag&quot;&gt;R&lt;/span&gt;&lt;span class=&quot;selector-class&quot;&gt;.drawable&lt;/span&gt;&lt;span class=&quot;selector-class&quot;&gt;.default_image&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;selector-tag&quot;&gt;mNetworkImageView&lt;/span&gt;&lt;span class=&quot;selector-class&quot;&gt;.setErrorImageResId&lt;/span&gt;(&lt;span class=&quot;selector-tag&quot;&gt;R&lt;/span&gt;&lt;span class=&quot;selector-class&quot;&gt;.drawable&lt;/span&gt;&lt;span class=&quot;selector-class&quot;&gt;.failed_image&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;selector-tag&quot;&gt;mNetworkImageView&lt;/span&gt;&lt;span class=&quot;selector-class&quot;&gt;.setImageUrl&lt;/span&gt;(&lt;span class=&quot;selector-tag&quot;&gt;url&lt;/span&gt;, &lt;span class=&quot;selector-tag&quot;&gt;imageLoader&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;setImageUrl() 方法接收两个参数，第一个指定图片的 URL 地址，第二个是前面创建好的 ImageLoader 对象，姑且使用未设置图片缓存的代码。然后一些基本事项无需赘述，运行程序，看到效果与 ImageLoader 的效果是一样的。&lt;/p&gt;
&lt;p&gt;值得注意的是，使用 ImageRequest 和 ImageLoader 两种方式加载图片都可以传入一个最大宽度和最大高度的参数来对图片进行压缩。然而，对于 NetworkImageView ，并不需要提供任何设置最大宽高的方法也能对加载的图片进行压缩。它是一个控件，在加载图片的时候会自动获取自身的宽高，然后对比网络图片的宽高，再决定是否需要对图片进行压缩。整个压缩过程在内部是完全自动化的，其呈现给我们的始终是一张大小刚好的图片，不会多占用任何一点内存。&lt;/p&gt;
&lt;p&gt;当然，不愿压缩图片的话，只需要在布局文件中将 layout_width 和 layout_height 都设置成 wrap_content即可。至此，关于 Android Volley 研究综述（二）到此结束，（三）未完待续。&lt;br&gt;&lt;br&gt;&lt;/p&gt;
&lt;h2 id=&quot;参考文献&quot;&gt;&lt;a href=&quot;#参考文献&quot; class=&quot;headerlink&quot; title=&quot;参考文献&quot;&gt;&lt;/a&gt;&lt;strong&gt;参考文献&lt;/strong&gt;&lt;/h2&gt;&lt;p&gt;1.&lt;a href=&quot;http://developer.android.com/training/volley/request.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://developer.android.com/training/volley/request.html&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;2.&lt;a href=&quot;http://developer.android.com/training/volley/requestqueue.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://developer.android.com/training/volley/requestqueue.html&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;3.&lt;a href=&quot;http://blog.csdn.net/guolin_blog/article/details/17482165&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://blog.csdn.net/guolin_blog/article/details/17482165&lt;/a&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;Universal-Image-Loader 具备强大的网络图片加载功能，使用 Volley ，可以实现类似的效果，并且，在性能上也毫不逊色。
    
    </summary>
    
    
      <category term="Android" scheme="http://iamasoldier6.com/tags/Android/"/>
    
      <category term="Volley" scheme="http://iamasoldier6.com/tags/Volley/"/>
    
  </entry>
  
  <entry>
    <title>Android Volley 研究综述（一）</title>
    <link href="http://iamasoldier6.com/2016/04/30/Android-Volley-%E7%A0%94%E7%A9%B6%E7%BB%BC%E8%BF%B0%EF%BC%88%E4%B8%80%EF%BC%89/"/>
    <id>http://iamasoldier6.com/2016/04/30/Android-Volley-研究综述（一）/</id>
    <published>2016-04-30T12:17:59.000Z</published>
    <updated>2016-05-05T13:55:13.000Z</updated>
    
    <content type="html">&lt;p&gt;Android 官网对 Volley 的一句话概括如下：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Volley is an HTTP library that makes networking for Android apps easier and most importantly,     faster.&lt;br&gt;Volley 是一个 HTTP 库，能让 Android apps 的网络操作更容易，并且最重要的是，更快捷。&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;一-Volley-的简介&quot;&gt;&lt;a href=&quot;#一-Volley-的简介&quot; class=&quot;headerlink&quot; title=&quot;一. Volley 的简介&quot;&gt;&lt;/a&gt;&lt;strong&gt;一. Volley 的简介&lt;/strong&gt;&lt;/h2&gt;&lt;p&gt;Volley 于 2013 年 Google I/O 大会上推出，是一种新式的网络通信框架，具有以下优点：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;网络请求的自动调度。&lt;/li&gt;
&lt;li&gt;多并发网络连接。&lt;/li&gt;
&lt;li&gt;使用标准 HTTP 缓存连贯性来缓存透明的磁盘和内存响应。&lt;/li&gt;
&lt;li&gt;支持请求优先级。&lt;/li&gt;
&lt;li&gt;取消请求 API 。你可以取消一个单一请求，或者你可以取消请求的某些区域。&lt;/li&gt;
&lt;li&gt;易于定制，例如，定制重试和回退功能。&lt;/li&gt;
&lt;li&gt;强大的指令，使得异步加载网络数据，且正确地显示到 UI 更加简单。&lt;/li&gt;
&lt;li&gt;调试与追踪工具。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Volley 擅长用来显示 UI 的 RPC (远程过程调用协议) 类型的操作，如获取作为构造性数据的一页搜索结果。它轻松地整合了任何协议，同时输出支持的数据，如原始的字符串，图片和 JSON 。通过提供内置的支持你需要的特性，Volley 使你免于去写样板代码，让你将关注点放在你的 app 的功能逻辑上。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Volley 不适合大的数据文件的下载或者大数据量的操作，是由于 Volley 需要保持解析时内存里的所有响应。&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;以上简介来自官网，总的来说，Volley 既可以像 AsyncHttpClient 一样简单地进行 HTTP 通信，也可以像 Universal-Image-Loader 一样轻松地加载网络图片。Volley 非常适合进行数据量不大，但通信频繁的网络操作，而对于大数据量的网络操作，如下载文件，Volley 的表现就不敢恭维了。&lt;/p&gt;
&lt;h2 id=&quot;二-Volley-的准备&quot;&gt;&lt;a href=&quot;#二-Volley-的准备&quot; class=&quot;headerlink&quot; title=&quot;二. Volley 的准备&quot;&gt;&lt;/a&gt;&lt;strong&gt;二. Volley 的准备&lt;/strong&gt;&lt;/h2&gt;&lt;p&gt;首先，电脑上最好得装有 Git ，具体安装方法因操作系统各异，自行 Google ，推荐梯子&lt;a href=&quot;http://www.meiyouvpn.top/promote/1335&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;美游 VPN &lt;/a&gt;，用了半年了，还不错。好，下载 Volley 源码：&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ git &lt;span class=&quot;built_in&quot;&gt;clone&lt;/span&gt; https://android.googlesource.com/platform/frameworks/volley&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;下载完成后，在 /volley/build/intermediates/bundles/debug 里找到 classes.jar ，就是我们要的 jar 包了，拷贝一份出来，重命名成 volley.jar ，再使用 Android Studio 新建一个 Android 项目，将 volley.jar 文件添加到 libs 目录下，如图：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://7xt0ac.com1.z0.glb.clouddn.com/as_jar_5.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;然后，鼠标左击选中 volley.jar ，再右击会出现一长串菜单，下拉找到 Add As Library 并单击，再 OK ，等待 Gradle build 。完事后，再选中项目，比如我的 VolleyDemo ，右击后下拉菜单，找到 Open Module Settings 并单击，出现如图：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://7xt0ac.com1.z0.glb.clouddn.com/as_jar_6.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;看到 Volley 已在 Dependencies 中，点击右下角 OK ，完事，这样准备工作就完成了。&lt;/p&gt;
&lt;h2 id=&quot;三-StringRequest-的使用&quot;&gt;&lt;a href=&quot;#三-StringRequest-的使用&quot; class=&quot;headerlink&quot; title=&quot;三. StringRequest 的使用&quot;&gt;&lt;/a&gt;&lt;strong&gt;三. StringRequest 的使用&lt;/strong&gt;&lt;/h2&gt;&lt;p&gt;StringRequestDemo 地址: &lt;a href=&quot;https://github.com/Iamasoldier6/AndroidExerciseDemos&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt; GitHub &lt;/a&gt;，只有 Get 请求的使用，POST 请求的使用，类比即可。&lt;/p&gt;
&lt;p&gt;从最基本的 HTTP 通信开始学习，即发起一条 HTTP 请求，然后接收 HTTP 响应。Android Studio 新建一个StringRequestDemo 项目，其他全部默认，一路 Next 到底，最后 Done。思路如下：&lt;/p&gt;
&lt;p&gt;首先，在 MainActivity 的 onCreate() 方法里，需要获取到一个 RequestQueue 对象：&lt;/p&gt;
&lt;figure class=&quot;highlight cpp&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;RequestQueue &lt;span class=&quot;built_in&quot;&gt;queue&lt;/span&gt; = Volley.newRequestQueue(&lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;这里的 RequestQueue 是一个请求队列对象，它可以缓存所有的 HTTP 请求，然后以一定的算法并发地发出这些请求。RequestQueue 内部的设计非常适合高并发，因此，不必为每一次的 HTTP 请求都创建一个 RequestQueue 对象，在每个需要和网络交互的 Activity 中创建一个 RequestQueue 对象基本足够。&lt;/p&gt;
&lt;p&gt;其次，为了要发出一条 HTTP 请求，再创建一个 StringRequest 对象：&lt;/p&gt;
&lt;figure class=&quot;highlight vbscript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;String&lt;/span&gt; url = &lt;span class=&quot;string&quot;&gt;&quot;http://www.google.com&quot;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;StringRequest stringRequest = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; StringRequest(url,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;Response&lt;/span&gt;.Listener&amp;lt;&lt;span class=&quot;built_in&quot;&gt;String&lt;/span&gt;&amp;gt;() &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            @Override&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; void onResponse(&lt;span class=&quot;built_in&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;response&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;built_in&quot;&gt;Log&lt;/span&gt;.d(&lt;span class=&quot;string&quot;&gt;&quot;TAG&quot;&lt;/span&gt;, &lt;span class=&quot;built_in&quot;&gt;response&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;, &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;Response&lt;/span&gt;.ErrorListener() &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    @Override&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; void onErrorResponse(VolleyError &lt;span class=&quot;keyword&quot;&gt;error&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;built_in&quot;&gt;Log&lt;/span&gt;.e(&lt;span class=&quot;string&quot;&gt;&quot;TAG&quot;&lt;/span&gt;, &lt;span class=&quot;keyword&quot;&gt;error&lt;/span&gt;.getMessage(), &lt;span class=&quot;keyword&quot;&gt;error&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;这里 new 出一个 StringRequest 对象，StringRequest() 方法中传入了三个参数，第一个是目标服务器的 URL 地址，第二个是服务器响应成功的回调，第三个是服务器响应失败的回调。具体来说，目标服务器地址填的是 Google 的首页（需要翻墙），然后，在响应成功的回调里，打印出服务器返回的内容；在响应失败的回调里，打印出失败的详细信息。&lt;/p&gt;
&lt;p&gt;最后，将该 StringRequest 对象添加到 RequestQueue 里面即可：&lt;/p&gt;
&lt;figure class=&quot;highlight cpp&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;queue&lt;/span&gt;.add(stringRequest);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;另外，Volley 要访问网络，在 AndroidManifest.xml 文件中添加一条权限：&lt;/p&gt;
&lt;figure class=&quot;highlight applescript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;uses-permission android:&lt;span class=&quot;built_in&quot;&gt;name&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;android.permission.INTERNET&quot;&lt;/span&gt;/&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;运行程序，发出该 HTTP 请求，Logcat 中部分打印数据如下（代码区域可左右拖动）：&lt;/p&gt;
&lt;figure class=&quot;highlight xml&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;&amp;lt;!doctype html&amp;gt;&lt;/span&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;html&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;itemscope&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;&quot;&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;itemtype&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;http://schema.org/WebPage&quot;&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;lang&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;en&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;head&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;meta&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;content&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;width=device-width,minimum-scale=1.0&quot;&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;name&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;viewport&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;meta&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;content&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;Search the world&#39;s information, including webpages, images, videos and more. Google has many special features to help you find exactly what you&#39;re looking for.&quot;&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;name&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;description&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;meta&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;content&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;noodp&quot;&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;name&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;robots&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;meta&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;content&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;/logos/doodles/2016/hertha-marks-ayrtons-162nd-birthday-6049205031272448-hp.jpg&quot;&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;itemprop&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;image&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;link&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;href&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;/images/branding/product/ico/googleg_lodp.ico&quot;&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;rel&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;shortcut icon&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;meta&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;content&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;Hertha Marks Ayrton&amp;amp;#8217;s 162nd birthday #GoogleDoodle&quot;&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;property&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;og:description&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;meta&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;content&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;http://www.google.com/logos/doodles/2016/hertha-marks-ayrtons-162nd-birthday-6049205031272448-thp.png&quot;&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;property&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;og:image&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;meta&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;content&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;500&quot;&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;property&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;og:image:width&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;meta&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;content&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;200&quot;&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;property&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;Google 返回的就是这一长串 HTML 代码，浏览器可以轻松地将这段 HTML 代码解析，然后将 Google 首页展现出来。如此，最基本的 HTTP 发送与响应的功能就完成了。代码量不多，其实，主要分以下三步：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;创建一个 RequestQueue 对象。&lt;/li&gt;
&lt;li&gt;创建一个 StringRequest 对象。&lt;/li&gt;
&lt;li&gt;将 StringRequest 对象添加到 RequestQueue 里面。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;以上，使用的只是 GET 请求，不过 HTTP 的请求类型通常有 GET 和 POST ，要发出一条 POST 请求，则思路如下：&lt;/p&gt;
&lt;p&gt;事实上，StringRequest 中也提供了一种四个参数的构造函数，其中第一个参数即指定了请求类型，如下：&lt;/p&gt;
&lt;figure class=&quot;highlight oxygene&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;StringRequest stringRequest = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; StringRequest(&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;Method&lt;/span&gt;.&lt;span class=&quot;title&quot;&gt;POST&lt;/span&gt;, &lt;span class=&quot;title&quot;&gt;url&lt;/span&gt;, &lt;span class=&quot;title&quot;&gt;listener&lt;/span&gt;, &lt;span class=&quot;title&quot;&gt;errorListener&lt;/span&gt;);&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;但是需要明确的是，StringRequest 中并没有提供设置 POST 参数的方法，然而，当发出 POST 请求时，Volley 会尝试调用 StringRequest 的父类即 Request 中的 getParams() 方法来获取 POST 参数，故只需要在 StringRequest 的匿名类中重写 getParams() 方法，于此设置 POST 参数即可，具体如下：&lt;/p&gt;
&lt;figure class=&quot;highlight lasso&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;StringRequest stringRequest = &lt;span class=&quot;literal&quot;&gt;new&lt;/span&gt; StringRequest(Method.POST, url, listener, errorListener) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	@Override&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;protected&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;Map&lt;/span&gt;&amp;lt;&lt;span class=&quot;built_in&quot;&gt;String&lt;/span&gt;, &lt;span class=&quot;built_in&quot;&gt;String&lt;/span&gt;&amp;gt; getParams() throws AuthFailureError &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;built_in&quot;&gt;Map&lt;/span&gt;&amp;lt;&lt;span class=&quot;built_in&quot;&gt;String&lt;/span&gt;, &lt;span class=&quot;built_in&quot;&gt;String&lt;/span&gt;&amp;gt; &lt;span class=&quot;built_in&quot;&gt;map&lt;/span&gt; = &lt;span class=&quot;literal&quot;&gt;new&lt;/span&gt; HashMap&amp;lt;&lt;span class=&quot;built_in&quot;&gt;String&lt;/span&gt;, &lt;span class=&quot;built_in&quot;&gt;String&lt;/span&gt;&amp;gt;();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;built_in&quot;&gt;map&lt;/span&gt;.put(&lt;span class=&quot;string&quot;&gt;&quot;params1&quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&quot;value1&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;built_in&quot;&gt;map&lt;/span&gt;.put(&lt;span class=&quot;string&quot;&gt;&quot;params2&quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&quot;value2&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;map&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;虽然没有设置 POST 参数的方法，但是由于 Volley 开源，可以自由地添加和修改，定制出所需的 Volley 版本。&lt;/p&gt;
&lt;h2 id=&quot;四-JsonRequest-的使用&quot;&gt;&lt;a href=&quot;#四-JsonRequest-的使用&quot; class=&quot;headerlink&quot; title=&quot;四. JsonRequest 的使用&quot;&gt;&lt;/a&gt;&lt;strong&gt;四. JsonRequest 的使用&lt;/strong&gt;&lt;/h2&gt;&lt;p&gt;JsonRequestDemo 地址: &lt;a href=&quot;https://github.com/Iamasoldier6/AndroidExerciseDemos&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt; GitHub &lt;/a&gt;，只有 JsonObjectRequest 的使用，JsonArrayObject 的使用，类比即可。&lt;/p&gt;
&lt;p&gt;同 StringRequest 一样，JsonRequest 也是继承于 Request 类，但是，JsonRequest 是一个抽象类，无法直接创建实例，得从子类入手。其有两个直接的子类，JsonObjectRequest (用于请求一段 JSON 数据) 和 JsonArrayRequest (用于请求一段JSON 数组) 。具体如下：&lt;/p&gt;
&lt;p&gt;第一步同上述 StringRequest 的第一步一样。&lt;/p&gt;
&lt;p&gt;然后，再 new 出一个 JsonObjectRequest 对象：&lt;/p&gt;
&lt;figure class=&quot;highlight vbscript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;String&lt;/span&gt; url = &lt;span class=&quot;string&quot;&gt;&quot;http://www.weather.com.cn/data/sk/101010100.html&quot;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;JsonObjectRequest jsonObjectRequest = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; JsonObjectRequest(url, &lt;span class=&quot;literal&quot;&gt;null&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;Response&lt;/span&gt;.Listener&amp;lt;JSONObject&amp;gt;() &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            @Override&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; void onResponse(JSONObject &lt;span class=&quot;built_in&quot;&gt;response&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;built_in&quot;&gt;Log&lt;/span&gt;.d(&lt;span class=&quot;string&quot;&gt;&quot;TAG&quot;&lt;/span&gt;, &lt;span class=&quot;built_in&quot;&gt;response&lt;/span&gt;.toString());&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;, &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;Response&lt;/span&gt;.ErrorListener() &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   @Override&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   &lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; void onErrorResponse(VolleyError &lt;span class=&quot;keyword&quot;&gt;error&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       &lt;span class=&quot;built_in&quot;&gt;Log&lt;/span&gt;.e(&lt;span class=&quot;string&quot;&gt;&quot;TAG&quot;&lt;/span&gt;, &lt;span class=&quot;keyword&quot;&gt;error&lt;/span&gt;.getMessage(), &lt;span class=&quot;keyword&quot;&gt;error&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;最后，类比 StringRequest ，将 JsonObjectRequest 对象添加到 RequestQueue 里面：&lt;/p&gt;
&lt;figure class=&quot;highlight cpp&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;queue&lt;/span&gt;.add(jsonObjectRequest);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;同时，不要忘了在 AndroidManifest.xml 文件中添加同上面一样的权限。&lt;/p&gt;
&lt;p&gt;上面的 URL 地址是一个查询天气信息的接口，响应的数据是以 JSON 格式返回的，这样，HTTP 通信完成后，服务器响应的天气信息回调到 onResponse() 方法中，在 Logcat 中打印出数据如下（代码区域可左右拖动）：&lt;/p&gt;
&lt;figure class=&quot;highlight json&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123;&lt;span class=&quot;attr&quot;&gt;&quot;weatherinfo&quot;&lt;/span&gt;:&amp;#123;&lt;span class=&quot;attr&quot;&gt;&quot;city&quot;&lt;/span&gt;:&lt;span class=&quot;string&quot;&gt;&quot;北京&quot;&lt;/span&gt;,&lt;span class=&quot;attr&quot;&gt;&quot;cityid&quot;&lt;/span&gt;:&lt;span class=&quot;string&quot;&gt;&quot;101010100&quot;&lt;/span&gt;,&lt;span class=&quot;attr&quot;&gt;&quot;temp&quot;&lt;/span&gt;:&lt;span class=&quot;string&quot;&gt;&quot;18&quot;&lt;/span&gt;,&lt;span class=&quot;attr&quot;&gt;&quot;WD&quot;&lt;/span&gt;:&lt;span class=&quot;string&quot;&gt;&quot;东南风&quot;&lt;/span&gt;,&lt;span class=&quot;attr&quot;&gt;&quot;WS&quot;&lt;/span&gt;:&lt;span class=&quot;string&quot;&gt;&quot;1级&quot;&lt;/span&gt;,&lt;span class=&quot;attr&quot;&gt;&quot;SD&quot;&lt;/span&gt;:&lt;span class=&quot;string&quot;&gt;&quot;17%&quot;&lt;/span&gt;,&lt;span class=&quot;attr&quot;&gt;&quot;WSE&quot;&lt;/span&gt;:&lt;span class=&quot;string&quot;&gt;&quot;1&quot;&lt;/span&gt;,&lt;span class=&quot;attr&quot;&gt;&quot;time&quot;&lt;/span&gt;:&lt;span class=&quot;string&quot;&gt;&quot;17:05&quot;&lt;/span&gt;,&lt;span class=&quot;attr&quot;&gt;&quot;isRadar&quot;&lt;/span&gt;:&lt;span class=&quot;string&quot;&gt;&quot;1&quot;&lt;/span&gt;,&lt;span class=&quot;attr&quot;&gt;&quot;Radar&quot;&lt;/span&gt;:&lt;span class=&quot;string&quot;&gt;&quot;JC_RADAR_AZ9010_JB&quot;&lt;/span&gt;,&lt;span class=&quot;attr&quot;&gt;&quot;njd&quot;&lt;/span&gt;:&lt;span class=&quot;string&quot;&gt;&quot;暂无实况&quot;&lt;/span&gt;,&lt;span class=&quot;attr&quot;&gt;&quot;qy&quot;&lt;/span&gt;:&lt;span class=&quot;string&quot;&gt;&quot;1011&quot;&lt;/span&gt;,&lt;span class=&quot;attr&quot;&gt;&quot;rain&quot;&lt;/span&gt;:&lt;span class=&quot;string&quot;&gt;&quot;0&quot;&lt;/span&gt;&amp;#125;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;如此，根据实际需求，从 JSONObject 对象中取出需要的数据即可。&lt;/p&gt;
&lt;p&gt;总结来说，StringRequest, JsonObjectRequest 和 JsonArrayRequest 的用法基本一致，关于 Android Volley 研究综述（一）到此结束，（二）未完待续。&lt;br&gt;&lt;br&gt;&lt;/p&gt;
&lt;h2 id=&quot;参考文献&quot;&gt;&lt;a href=&quot;#参考文献&quot; class=&quot;headerlink&quot; title=&quot;参考文献&quot;&gt;&lt;/a&gt;&lt;strong&gt;参考文献&lt;/strong&gt;&lt;/h2&gt;&lt;p&gt;1.&lt;a href=&quot;http://developer.android.com/training/volley/index.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://developer.android.com/training/volley/index.html&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;2.&lt;a href=&quot;http://developer.android.com/training/volley/request.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://developer.android.com/training/volley/request.html&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;3.&lt;a href=&quot;http://blog.csdn.net/guolin_blog/article/details/17482095&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://blog.csdn.net/guolin_blog/article/details/17482095&lt;/a&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;Android 官网对 Volley 的一句话概括如下：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Volley is an HTTP library that makes networking for Android apps easier and most importantly,     faster.&lt;br&gt;Volley 是一个 HTTP 库，能让 Android apps 的网络操作更容易，并且最重要的是，更快捷。
    
    </summary>
    
    
      <category term="Android" scheme="http://iamasoldier6.com/tags/Android/"/>
    
      <category term="Volley" scheme="http://iamasoldier6.com/tags/Volley/"/>
    
      <category term="Mac" scheme="http://iamasoldier6.com/tags/Mac/"/>
    
  </entry>
  
  <entry>
    <title>半月技术谈</title>
    <link href="http://iamasoldier6.com/2016/04/14/%E5%8D%8A%E6%9C%88%E6%8A%80%E6%9C%AF%E8%B0%88/"/>
    <id>http://iamasoldier6.com/2016/04/14/半月技术谈/</id>
    <published>2016-04-14T10:18:39.000Z</published>
    <updated>2016-05-05T13:56:03.000Z</updated>
    
    <content type="html">&lt;p&gt;开博客有半个月了，总想搞个大新闻，奈何目前技术水平有限，憋不出来大事件，又想着尽量原创。&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;索性，就把这半个月期间学习与开发中值得总结的东西放博客上，供自己复用时查询，也供需要的人参考。以后，也尽量保持一周或半月左右更新篇博客，于自己也是成长，同时有用的点也能帮助需要的人。不废话，呈现如下：&lt;/p&gt;
&lt;h2 id=&quot;Java&quot;&gt;&lt;a href=&quot;#Java&quot; class=&quot;headerlink&quot; title=&quot;Java&quot;&gt;&lt;/a&gt;&lt;strong&gt;Java&lt;/strong&gt;&lt;/h2&gt;&lt;p&gt;博主前段时间深感 Java 基础无力，于是自清明放假开始，重新撸起去年自学期间半途放弃的《Thinking in Java》，并打算一季左右撸完。目前，已撸到了第 7 章，正常进度应该可以达成初定目标吧，原谅我是个渣渣，大神勿喷。几点总结如下：&lt;/p&gt;
&lt;p&gt;1.在 Java 中你所做的全部工作就是定义类，产生那些类的对象，以及发送消息给这些对象。&lt;/p&gt;
&lt;p&gt;2.一个 static 字段对每个类来说都只有一份存储空间，而非 static 字段则是对每个对象有一个存储空间。&lt;/p&gt;
&lt;p&gt;3.构造器的名称必须与类名完全相同。System.gc() 用于强制进行终结动作。&lt;/p&gt;
&lt;p&gt;4.通常写 this 的时候，都是指“这个对象”或者“当前对象”，而且它本身表示对当前对象的引用。&lt;/p&gt;
&lt;p&gt;5.初始化的顺序是先静态对象，而后是“非静态”对象。&lt;/p&gt;
&lt;p&gt;6.重构即重写代码，以使得它更可读、更易理解，并因此而更具有可维护性。&lt;/p&gt;
&lt;p&gt;7.关于public, protected, default 与 private 的作用域：&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;作用域&lt;/th&gt;
&lt;th&gt;当前类&lt;/th&gt;
&lt;th&gt;同一包内&lt;/th&gt;
&lt;th&gt;子类&lt;/th&gt;
&lt;th&gt;其他包&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;public&lt;/td&gt;
&lt;td&gt;√&lt;/td&gt;
&lt;td&gt;√&lt;/td&gt;
&lt;td&gt;√&lt;/td&gt;
&lt;td&gt;√&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;protected&lt;/td&gt;
&lt;td&gt;√&lt;/td&gt;
&lt;td&gt;√&lt;/td&gt;
&lt;td&gt;√&lt;/td&gt;
&lt;td&gt;X&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;default&lt;/td&gt;
&lt;td&gt;√&lt;/td&gt;
&lt;td&gt;√&lt;/td&gt;
&lt;td&gt;X&lt;/td&gt;
&lt;td&gt;X&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;private&lt;/td&gt;
&lt;td&gt;√&lt;/td&gt;
&lt;td&gt;X&lt;/td&gt;
&lt;td&gt;X&lt;/td&gt;
&lt;td&gt;X&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2 id=&quot;Android&quot;&gt;&lt;a href=&quot;#Android&quot; class=&quot;headerlink&quot; title=&quot;Android&quot;&gt;&lt;/a&gt;&lt;strong&gt;Android&lt;/strong&gt;&lt;/h2&gt;&lt;p&gt;1.Android Studio 的中文乱码问题：Android Studio 安装后发现所有的中文，不管是界面上的还是输出的 Log 中的中文，都变成问号小框框， 可以肯定是字体的问题。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;解决办法&lt;/code&gt;：Preferences -&amp;gt; Appearance &amp;amp; Behavior -&amp;gt; Appearance -&amp;gt; 选择 Override default fonts by，随便选择一个中文字体，小框框都是中文字，再保存重启就行。&lt;/p&gt;
&lt;p&gt;2.&lt;a href=&quot;http://laobie.github.io/android/2016/02/14/android-studio-tips.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Android Studio 小技巧合集&lt;/a&gt;，熟练一些常用快捷键操作，简直不能太顺心。&lt;/p&gt;
&lt;h2 id=&quot;Variety&quot;&gt;&lt;a href=&quot;#Variety&quot; class=&quot;headerlink&quot; title=&quot;Variety&quot;&gt;&lt;/a&gt;&lt;strong&gt;Variety&lt;/strong&gt;&lt;/h2&gt;&lt;p&gt;上周第二遍看《星际穿越》，哲理与人事方面颇受洗礼，很 Nice 的电影。具体解读纷繁，就不提了。&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;开博客有半个月了，总想搞个大新闻，奈何目前技术水平有限，憋不出来大事件，又想着尽量原创。
    
    </summary>
    
    
      <category term="Android" scheme="http://iamasoldier6.com/tags/Android/"/>
    
      <category term="Java" scheme="http://iamasoldier6.com/tags/Java/"/>
    
      <category term="Variety" scheme="http://iamasoldier6.com/tags/Variety/"/>
    
  </entry>
  
  <entry>
    <title>Mac_Android_配置adb环境变量</title>
    <link href="http://iamasoldier6.com/2016/03/31/Mac-Android-%E9%85%8D%E7%BD%AEadb%E7%8E%AF%E5%A2%83%E5%8F%98%E9%87%8F/"/>
    <id>http://iamasoldier6.com/2016/03/31/Mac-Android-配置adb环境变量/</id>
    <published>2016-03-31T12:53:44.000Z</published>
    <updated>2016-05-05T13:55:58.000Z</updated>
    
    <content type="html">&lt;p&gt;折腾了近两天终于把博客搭建好了，圆了近半年的念想，以后终于有个专属自己的博客园地了。&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;等把这Hexo博客优化熟练好了，或许未来会开篇博客，讲搭建优化过程。这是搭建博客后的第一篇干货博客，熟悉下写博客流程，顺便试试效果怎样。下面进入正题，关于“Mac下Android的配置adb环境变量”，写这个小专题源于之前学习《第一行代码》时，在“SQLite存储”一节遇到的，现与大家分享。方法如下：&lt;/p&gt;
&lt;p&gt;1.打开终端Terminal。&lt;/p&gt;
&lt;p&gt;2.进入HOME目录：命令行输入 echo（这之间有一个空格） $HOME&lt;/p&gt;
&lt;p&gt;3.创建.bash_profile文件：命令行输入 touch（这之间有一个空格）.bash_profile&lt;/p&gt;
&lt;p&gt;4.打开.bash_profile文件：命令行输入open（这之间有一个空格）-e（这之间有一个空格）.bash_profile，自动弹出 .bash_profile 文件的编辑窗口。&lt;/p&gt;
&lt;p&gt;5.关键一步，不清楚AS的SDK路径，开启AS中的SDK Manager即可找到，&lt;br&gt;在.bash_profile文件中输入，比如我的：export PATH=${PATH}:/Users/Iamasoldier6/Library/Android/sdk/platform-tools&lt;/p&gt;
&lt;p&gt;6.保存文件。&lt;/p&gt;
&lt;p&gt;7.更新才配置的环境变量：命令行输入source（这之间有一个空格）.bash_profile&lt;/p&gt;
&lt;p&gt;8.验证配置：输入adb，出现-bash: adb: command not found，则失败，找原因重新配置；&lt;br&gt;出现adb的命令参数解释，则表明环境变量配置成功，Bingo!&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;折腾了近两天终于把博客搭建好了，圆了近半年的念想，以后终于有个专属自己的博客园地了。
    
    </summary>
    
    
      <category term="Android" scheme="http://iamasoldier6.com/tags/Android/"/>
    
      <category term="Mac" scheme="http://iamasoldier6.com/tags/Mac/"/>
    
      <category term="adb" scheme="http://iamasoldier6.com/tags/adb/"/>
    
  </entry>
  
</feed>
